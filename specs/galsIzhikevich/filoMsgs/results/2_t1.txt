TLC2 Version 2.12 of 29 January 2018
Running breadth-first search Model-Checking with 8 workers on 8 cores with 11630MB heap and 64MB offheap memory (Linux 4.13.0-1017-gcp amd64, Oracle Corporation 1.8.0_171 x86_64).
Parsing file /home/affan/ee4-fyp_TLA/specs/galsIzhikevich/filoMsgs/MC2.tla
Parsing file /home/affan/ee4-fyp_TLA/specs/galsIzhikevich/filoMsgs/GalsIzhikevich.tla
Parsing file /usr/share/java/tla-tools/tla2sany/StandardModules/TLC.tla
Parsing file /usr/share/java/tla-tools/tla2sany/StandardModules/FiniteSets.tla
Parsing file /usr/share/java/tla-tools/tla2sany/StandardModules/Integers.tla
Parsing file /usr/share/java/tla-tools/tla2sany/StandardModules/Sequences.tla
Parsing file /home/affan/ee4-fyp_TLA/specs/galsIzhikevich/filoMsgs/FiloMessages.tla
Parsing file /usr/share/java/tla-tools/tla2sany/StandardModules/Naturals.tla
Semantic processing of module Naturals
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module Integers
Semantic processing of module FiloMessages
Semantic processing of module GalsIzhikevich
Semantic processing of module TLC
Semantic processing of module MC2
Starting... (2018-06-17 17:31:40)
Computing initial states...
Finished computing initial states: 1 distinct state generated.
Error: Deadlock reached.
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ state = << [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 0 @@ 4 :> 0)],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> <<0, 0>>],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = <<>>

State 2: <Fire line 26, col 13 to line 51, col 17 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 1)],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 0 @@ 4 :> 0)],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> <<0, 0>>],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 3: <Fire line 26, col 13 to line 51, col 17 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 1)],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> <<0, 0>>],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 4: <Fire line 26, col 13 to line 51, col 17 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 0, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 5: <Fire line 26, col 13 to line 51, col 17 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 4, out |-> 2],
     [t |-> 1, type |-> "fire", sender |-> 4, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 4, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 4, out |-> 2] },
   { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 6: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 4, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 4, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 4, out |-> 2] },
   { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 7: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << { [t |-> 1, type |-> "confirm", sender |-> 4, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 4, out |-> 2] },
   { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 8: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 1)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << {[t |-> 1, type |-> "confirm", sender |-> 4, out |-> 2]},
   { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 9: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 10: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 3, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 11: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (3 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << { [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 1],
     [t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 12: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 1)] >>
/\ messages = << {[t |-> 1, type |-> "confirm", sender |-> 3, out |-> 4]},
   { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 13: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 1],
     [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 14: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<0, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 2, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 15: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 1>>],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 3],
     [t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4] },
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 16: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 0>>],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (2 :> 1 @@ 3 :> 0)] >>
/\ messages = << {[t |-> 1, type |-> "confirm", sender |-> 2, out |-> 4]},
   { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 17: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> <<1, 0>>],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 3],
     [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 18: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> <<1, 0>>],
   [t |-> 1, c |-> <<1, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "fire", sender |-> 1, out |-> 4],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 19: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 1 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> <<1, 0>>],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = << { [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 2],
     [t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3] } >>

State 20: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> <<1, 0>>],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = <<{[t |-> 1, type |-> "confirm", sender |-> 1, out |-> 3]}>>

State 21: <DCGNext line 69, col 17 to line 70, col 57 of module GalsIzhikevich>
/\ state = << [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (3 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (1 :> 0 @@ 4 :> 0)],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> <<0, 0>>],
   [t |-> 1, c |-> <<2, 0, 0>>, tDiff |-> (2 :> 0 @@ 3 :> 0)] >>
/\ messages = <<>>

12640 states generated, 10128 distinct states found, 1 states left on queue.
The depth of the complete state graph search is 19.
The average outdegree of the complete state graph is 1 (minimum is 0, the maximum 4 and the 95th percentile is 2).
Finished in 01s at (2018-06-17 17:31:41)
